{
  "name": "backend",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "type": "module",
  "license": "ISC",
  "author": "",
  "engines": {
    "node": ">=18"
  },
  "scripts": {
    "start": "node ./server.js",
    "dev": "nodemon ./server.js",
    "test": "echo \"Error: no test specified\" && exit 1",
    "generate:voronoi": "python \"Voronoi Algorithm/MappingAlg.py\"",
    "generate:voronoi:5km": "python \"Voronoi Algorithm/MappingAlg.py\" --pix 5000 --target_pop_per_seed 800000",
    "generate:voronoi:1km": "python \"Voronoi Algorithm/MappingAlg.py\" --pix 1000 --target_pop_per_seed 500000",
    "noise:point": "node -e \"import('./services/noisePollutionService.js').then(m=>m.getNoiseAtPoint(parseFloat(process.env.LAT||'37.419734'),parseFloat(process.env.LNG||'-122.0827784'))).then(r=>console.log(JSON.stringify(r,null,2))).catch(e=>{console.error(e);process.exit(1)})\"",
    "noise:nearest": "node -e \"import('./services/noisePollutionService.js').then(m=>m.getNearestNoiseHit(parseFloat(process.env.LAT||'37.419734'),parseFloat(process.env.LNG||'-122.0827784'),parseFloat(process.env.RADIUS||'50'))).then(r=>console.log(JSON.stringify(r,null,2))).catch(e=>{console.error(e);process.exit(1)})\""
  },
  "keywords": [],
  "dependencies": {
    "axios": "^1.12.2",
    "cors": "^2.8.5",
    "dotenv": "^17.2.3",
    "express": "^5.1.0",
    "node-fetch": "^3.3.2"
  },
  "devDependencies": {
    "nodemon": "^3.1.10"
  }
}


